{"version":3,"sources":["Constant.js","components/Table/index.js","components/User/index.js","components/OrgStatic/BoxRec.js","components/OrgStatic/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["Constant","API","showDetail","useState","data","setData","offset","setOffset","limit","setLimit","filteredData","setfilteredData","useEffect","manager","a","axios","get","response","getEmployees","dataList","Array","isArray","map","val","index","key","onClickCapture","Button","variant","first","last","id","Form","Row","Col","Control","placeholder","onKeyUp","event","list","searchKey","target","value","filter","department","toLowerCase","includes","Table","striped","bordered","hover","className","onClick","disabled","onChange","parseInt","length","formatData","fetchNewUser","managerDetails","setmanagerDetails","reportees","setReportees","peers","setPeers","fetchManager","fetchReportees","peer","peerList","Jumbotron","style","display","float","Box","boss","peerClicked","setpeerClicked","bossClicked","setbossClicked","user","setUser","setreportees","getUser","console","log","aria-hidden","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a050e61f.chunk.js","sourcesContent":["const Constant = {\n  API: 'https://2jdg5klzl0.execute-api.us-west-1.amazonaws.com/default',\n};\n\nexport default Constant;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, Button, Form, Col } from 'react-bootstrap';\nimport Constant from '../../Constant';\n\nimport './Table.scss';\n\nconst filterData = (list, searchKey, setFunction) => {\n  if (!searchKey) {\n    setFunction(null);\n  } else {\n    const filtered = list.filter(val => {\n      const { first, last, id, department, manager } = val;\n      const searchStr = `${first}${last}${id}${department}${manager}`.toLowerCase();\n      return searchStr.includes(searchKey.toLowerCase());\n    });\n    setFunction(filtered);\n  }\n};\n\nexport default function({ showDetail }) {\n  const [data, setData] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [filteredData, setfilteredData] = useState(null);\n\n  useEffect(() => {\n    const getEmployees = async manager => {\n      const response = await axios.get(`${Constant.API}/EmployeesChart-Api?limit=${limit}&offset=${offset}`);\n      const data = response.data;\n      setData(data);\n    };\n\n    getEmployees();\n  }, [offset, limit]);\n  let dataList = [];\n  if (Array.isArray(data)) {\n    dataList = (filteredData ? filteredData : data || []).map((val, index) => (\n      <tr key={offset + index} onClickCapture={() => showDetail(val)}>\n        <td>{offset + index + 1}</td>\n        <td>\n          <Button variant=\"link\">\n            {val.first} {val.last}\n          </Button>\n        </td>\n        <td>\n          <Button variant=\"link\">{val.id}</Button>\n        </td>\n      </tr>\n    ));\n  }\n\n  return (\n    <div>\n      <Form>\n        <Form.Row>\n          <Col>\n            <Form.Control\n              placeholder=\"Search for name, id, manager, department\"\n              onKeyUp={event => {\n                filterData(data, event.target.value, setfilteredData, setData);\n              }}\n            />\n          </Col>\n        </Form.Row>\n      </Form>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th />\n            <th>Name</th>\n            <th>Employee Id</th>\n          </tr>\n        </thead>\n        <tbody>{dataList}</tbody>\n      </Table>\n      <div className=\"pagination\">\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            setOffset(offset - limit);\n          }}\n          disabled={offset === 0}\n        >\n          <span>{'<'}</span>\n        </Button>\n        <div>\n          Page {offset / limit + 1 || 1} -{' '}\n          <select\n            onChange={event => {\n              setLimit(parseInt(event.target.value, 10));\n            }}\n          >\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <Button\n          variant=\"link\"\n          onClick={() => {\n            setOffset(offset + limit);\n          }}\n          disabled={data.length === 0}\n        >\n          <span>{'>'}</span>\n        </Button>\n      </div>\n    </div>\n  );\n  // }\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Jumbotron, Row, Col } from 'react-bootstrap';\nimport Constant from '../../Constant';\nimport Container from 'react-bootstrap/Container';\n\nimport './User.scss';\n\nconst formatData = (data, fetchNewUser) =>\n  data.map((val, index) => (\n    <Button\n      variant=\"link\"\n      onClickCapture={() => {\n        fetchNewUser(val);\n      }}\n      key={index}\n    >\n      {val.first} {val.last}\n    </Button>\n  ));\n\nexport default function({ first, last, id, manager, department, fetchNewUser }) {\n  const [managerDetails, setmanagerDetails] = useState(0);\n  const [reportees, setReportees] = useState([]);\n  const [peers, setPeers] = useState([]);\n\n  useEffect(() => {\n    const fetchManager = async manager => {\n      if (manager) {\n        const response = await axios.get(`${Constant.API}/EmployeesChart-Api?id=${manager}`);\n        const data = response.data[0];\n        setmanagerDetails({ ...data });\n      }\n    };\n\n    const fetchReportees = async (id, peer) => {\n      if (id) {\n        const response = await axios.get(`${Constant.API}/EmployeesChart-Api?manager=${id}`);\n        if (peer) {\n          setReportees(response.data);\n        } else {\n          setPeers(response.data);\n        }\n      }\n    };\n\n    fetchManager(manager);\n    fetchReportees(id);\n    fetchReportees(manager, true);\n  }, [manager, id]);\n\n  const dataList = formatData(reportees, fetchNewUser);\n  const peerList = formatData(peers, fetchNewUser);\n\n  return id ? (\n    <Jumbotron className=\"user-class\">\n      <Container>\n        <Row>\n          <Col>\n            <Row>\n              <h1>\n                {first} {last}\n              </h1>\n            </Row>\n            {manager <= 0 && (\n              <Row>\n                <h2>Head</h2>\n              </Row>\n            )}\n            <Row>\n              Employee Id: <h3>{id}</h3>\n            </Row>\n            {manager && manager !== 0 ? (\n              <Row>\n                Manager :\n                <h3>\n                  {managerDetails.first && (\n                    <Button\n                      variant=\"link\"\n                      onClick={() => {\n                        setmanagerDetails({});\n                        fetchNewUser(managerDetails);\n                      }}\n                    >\n                      {managerDetails.first} {managerDetails.last}\n                    </Button>\n                  )}\n                </h3>\n              </Row>\n            ) : (\n              ''\n            )}\n            <Row>\n              Department <h3>{department ? department : '-'}</h3>\n            </Row>\n          </Col>\n\n          <Col className=\"peer-list\">\n            <Row style={{ display: 'flex' }}>\n              {dataList.length ? (\n                <Col>\n                  <h6>{managerDetails.first ? managerDetails.first : first}'s Reportees</h6>\n                  <Row>{dataList}</Row>\n                </Col>\n              ) : (\n                ''\n              )}\n              {peerList.length && manager !== 0 ? (\n                <Col>\n                  <h6>{first}'s Peers</h6>\n                  <Row>{peerList}</Row>\n                </Col>\n              ) : (\n                ''\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Row style={{ float: 'right' }}>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            fetchNewUser({});\n          }}\n        >\n          Close\n        </Button>\n      </Row>\n    </Jumbotron>\n  ) : (\n    <div />\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport Constant from '../../Constant';\n\nimport './Org.scss';\n\nconst Box = function({ id, peer, boss }) {\n  const [peerClicked, setpeerClicked] = useState(false);\n  const [bossClicked, setbossClicked] = useState(false);\n  const [user, setUser] = useState({});\n  const [reportees, setreportees] = useState([]);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const user = (await axios.get(`${Constant.API}/EmployeesChart-Api?id=${id}`)).data[0];\n      const reportees = id ? (await axios.get(`${Constant.API}/EmployeesChart-Api?manager=${id}`)).data : [];\n      setUser(user);\n      setreportees(reportees);\n    };\n    getUser();\n  }, [id]);\n  console.log(user);\n  return user ? (\n    <div className=\"wholebox\">\n      {bossClicked && (\n        <div className=\"box-container boss\">\n          <Box {...{ id: user.manager }} boss={true} />\n        </div>\n      )}\n      <div className={`user-card ${user.manager === 0 ? 'head' : ''} ${reportees.length > 0 ? 'manager' : ''}`}>\n        <Button\n          onClick={() => {\n            setbossClicked(true);\n          }}\n          disabled={bossClicked || peer || user.manager === 0}\n          variant=\"link\"\n          className={`${user.manager === 0 ? 'head' : ''}`}\n        >\n          <i className=\"fa fa-chevron-circle-up\" aria-hidden=\"true\" />\n        </Button>\n\n        <h5>{user.first}</h5>\n        <h5>{user.last}</h5>\n        <Button\n          onClick={() => {\n            setpeerClicked(true);\n          }}\n          disabled={peerClicked || boss || reportees.length === 0}\n          variant=\"link\"\n          className={`peer ${reportees.length === 0 ? 'no-peers' : ''}`}\n        >\n          <i className=\"fa fa-chevron-circle-down\" aria-hidden=\"true\" />\n        </Button>\n      </div>\n      {peerClicked && (\n        <div className=\"box-container peer\">\n          {reportees.map((value, index) => {\n            return <Box key={index} {...{ id: value.id }} peer={true} />;\n          })}\n        </div>\n      )}\n    </div>\n  ) : (\n    ''\n  );\n};\n\nexport default Box;\n","import React, { useState, useEffect } from 'react';\nimport Box from './BoxRec';\nimport { Button } from 'react-bootstrap';\n\nimport './Org.scss';\n\nexport default function({ id }) {\n  const [user, setUser] = useState(id);\n  useEffect(() => {\n    setUser(id);\n  }, [id]);\n\n  return (\n    <div>\n      <Button variant=\"primary color-code\" disabled>\n        Head\n      </Button>\n      <Button variant=\"warning color-code\" disabled>\n        Manager\n      </Button>\n      <Button variant=\"success color-code\" disabled>\n        Other\n      </Button>\n\n      <div className=\"box-container top\">\n        <Box {...{ id: user }} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Table from '../../components/Table';\nimport User from '../../components/User';\nimport OrgNew from '../../components/OrgStatic';\n\nexport default function() {\n  const [user, fetchNewUser] = useState(0);\n  return (\n    <div>\n      <User {...user} fetchNewUser={fetchNewUser} />\n      {user.first && <OrgNew {...{ id: user.id }} />}\n      <Table\n        showDetail={val => {\n          fetchNewUser(val);\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Employee Directory</h1>\n      </header>\n      <section>\n        <Container />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}